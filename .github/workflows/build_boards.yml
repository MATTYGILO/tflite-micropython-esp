name: Build ESP32

on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'manage/**'
      - 'assets/**'
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'examples/**'
      - 'assets/**'
      - 'README.md'
      - 'ci/*unix*.sh'
      - '.github/workflows/build_unix.yml'
      - 'docs/**'
      - 'manage/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board_type: [
          'MICROLITE',
#          'MICROLITE_C3',
#          'MICROLITE_C3_USB',
#          'MICROLITE_S2_SPIRAM',
#          'MICROLITE_S3',
#          'MICROLITE_S3_SPIRAM',
#          'MICROLITE_S3_SPIRAM_OCTAL',
#          'MICROLITE_SPIRAM',
#          'MICROLITE_SPIRAM_16M',
#          'MICROLITE_SPIRAM_CAM'
        ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10.16

      - name: Build and check firmware
        run: |
          chmod +x ./scripts/build_and_check.sh
          ./scripts/build_and_check.sh ${{ matrix.board_type }}

      - name: Archive Firmware
        uses: actions/upload-artifact@v4
        with:
          name: microlite-esp32-${{ matrix.board_type }}-firmware
          path: |
            ./boards/${{ matrix.board_type }}/build/bootloader/bootloader.bin
            ./boards/${{ matrix.board_type }}/build/partition_table/partition-table.bin  # yamllint disable-line rule:line-length
            ./boards/${{ matrix.board_type }}/build/micropython.bin
            ./boards/${{ matrix.board_type }}/build/micropython.elf

