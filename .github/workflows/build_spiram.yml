name: ESP32S3 SPIRAM

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule
on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'manage/**'
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'examples/**'
      - 'README.md'
      - 'ci/*unix*.sh'
      - '.github/workflows/build_unix.yml'
      - 'docs/**'
      - 'manage/**'

jobs:
  tensorflow_micropython_esp32s3_build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Prepare to Build Tensorflow Micropython Firmware for ESP32
        run: |
          git submodule init
          git submodule update --recursive

          cd third_party/micropython
          
          git submodule update --init lib/axtls
          git submodule update --init lib/berkeley-db-1.xx
          
          cd ports/esp32
          make BOARD= submodules
          cd ../../../
          pwd

      - name: Get Cache Keys
        run: |
          IDF_COMMIT=8b94183c9cb47ede8f02df5598d8b9d68c754860
          echo "esp-idf-commit=$IDF_COMMIT" >> $GITHUB_ENV

      - name: Setup IDF
        run: |
          source ./third_party/micropython/tools/ci.sh && ci_esp32_idf44_setup

      - name: Setup Build for Tensorflow
        if: steps.cache-tflm.outputs.cache-hit != 'true'
        run: |
          source ./esp-idf/export.sh
          
          echo "Installing Pillow and Wave"
          pip3 install Pillow
          pip3 install numpy
          pip3 install Wave
          
      - name: Build micropython cross compiler
        run:  |
          source ./esp-idf/export.sh
          cd ./third_party/micropython
          echo "make -C mpy-cross V=1 clean all"
          
          make -C mpy-cross V=1 clean all

      - name: Build ESP32 S3 psram support and 8MB Flash firmware - SPIRAM
        run: |
          
          echo "./esp-idf/export.sh"
          source ./esp-idf/export.sh
          
          echo "cd ./boards/MICROLITE_S3_SPIRAM"
          cd ./boards/MICROLITE_S3_SPIRAM
          
          echo "rm -rf build"
          rm -rf build
          
          ls -la
          
          echo "idf.py clean build"
          idf.py clean build
          
          echo "Current directory: $(pwd)"
          
          chmod +x ../../scripts/assemble-unified-image-esp.sh

      - name: Archive ESP32-MICROLITE_S3_SPIRAM firmware
        uses: actions/upload-artifact@v2
        with:
          name: microlite-esp32-s3-spiram-firmware
          path: |
            ./boards/MICROLITE_S3_SPIRAM/build/bootloader/bootloader.bin
            ./boards/MICROLITE_S3_SPIRAM/build/partition_table/partition-table.bin
            ./boards/MICROLITE_S3_SPIRAM/build/micropython.bin
            ./boards/MICROLITE_S3_SPIRAM/build/micropython.elf

